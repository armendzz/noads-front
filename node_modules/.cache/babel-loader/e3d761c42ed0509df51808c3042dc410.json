{"remainingRequest":"/home/armendz/Project/noads-tube/front/node_modules/babel-loader/lib/index.js!/home/armendz/Project/noads-tube/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/armendz/Project/noads-tube/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/armendz/Project/noads-tube/front/src/views/Video.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/armendz/Project/noads-tube/front/src/views/Video.vue","mtime":1609465740805},{"path":"/home/armendz/Project/noads-tube/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/armendz/Project/noads-tube/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/armendz/Project/noads-tube/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/armendz/Project/noads-tube/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgVnVlQ29yZVZpZGVvUGxheWVyIGZyb20gJ3Z1ZS1jb3JlLXZpZGVvLXBsYXllcic7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBWdWVDb3JlVmlkZW9QbGF5ZXI6IFZ1ZUNvcmVWaWRlb1BsYXllcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpZGVvOiBbXSwKICAgICAgc3JjOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9zaW5nbGUnLCB7CiAgICAgIHZpZGlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuc2x1ZwogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICBfdGhpcy52aWRlbyA9IGRhdGE7CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyBhIGNvbXB1dGVkIGdldHRlcgogICAgc3JjYzogZnVuY3Rpb24gc3JjYygpIHsKICAgICAgdmFyIHNzID0gW107CiAgICAgIHRoaXMudmlkZW8uZm9ybWF0cy5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgaWYgKHR5cGVvZiBlLmF1ZGlvU2FtcGxlUmF0ZSAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgIGlmIChlLm1pbWVUeXBlLmluY2x1ZGVzKCd2aWRlbycpKSBzcy5wdXNoKGUpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBzczsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Video.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,kBAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,GAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AACA,IAAA,KAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AACA,MAAA,KAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AADA,KAAA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,IAAA;AAGA,KAPA;AAQA,GAnBA;AAoBA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,IAAA,EAAA,gBAAA;AACA,UAAA,EAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,OAAA,CAAA,CAAA,eAAA,KAAA,WAAA,EAAA;AAEA,cAAA,CAAA,CAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,CAAA;AAEA;AACA,OANA;AAOA,aAAA,EAAA;AACA;AAZA;AApBA,CAAA","sourcesContent":["<template>\n  <div>\n      <div>{{ $route.params.slug }}</div>\n    <div class=\"card\">\n        <div class=\"card-header\">{{ video.videoDetails.title }}</div>\n        <div class=\"card-body\">\n        \n       <!--      <video controls>\n                <source :src=\"srcc[0].url\"\n                    type=\"video/mp4\" autoplay>\n                              \n            \n            Sorry, your browser doesn't support embedded videos.\n        </video>\n           <video controls>\n                <source :src=\"srcc[1].url\"\n                    type=\"video/mp4\" autoplay>\n                              \n            \n            Sorry, your browser doesn't support embedded videos.\n        </video> -->\n      <vue-plyr :options=\"options\">\n  <video\n    controls\n    crossorigin\n    playsinline\n    data-poster=\"poster.jpg\"\n  >\n    <source\n      size=\"720\"\n      src=\"/path/to/video-720p.mp4\"\n      type=\"video/mp4\"\n    />\n    <source\n      size=\"1080\"\n      src=\"/path/to/video-1080p.mp4\"\n      type=\"video/mp4\"\n    />\n    <track\n      default\n      kind=\"captions\"\n      label=\"English captions\"\n      src=\"/path/to/english.vtt\"\n      srclang=\"en\"\n    />\n  </video>\n</vue-plyr>\n\n        <hr>\n          {{ video.videoDetails.description }}  \n        </div>\n    </div>\n      \n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport VueCoreVideoPlayer from 'vue-core-video-player';\n\nexport default {\n     components: {\n    VueCoreVideoPlayer\n  },\n      data(){\n    return {\n      video: [],\n      src: []\n    }\n  },\n    mounted(){\n          axios.post('http://localhost:3000/single', {\n        vidid: this.$route.params.slug\n      }).then(response => {\n          let data = response.data\n      this.video = data\n\n      \n    })\n  },\n  computed: {\n    // a computed getter\n    srcc: function () {\n        let ss = []\n       this.video.formats.forEach(e => {\n        if (typeof e.audioSampleRate !== 'undefined') {\n            \n           if(e.mimeType.includes('video')) ss.push(e);\n            \n          }\n        })\n      return ss\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/views"}]}